Page 1
BASIC
BASIC (Beginners' All-purpose Symbolic
Instruction Code)[1] is a family of [URL: "https://en.wikipedia.org/wiki/General-purpose_programming_language"] general-purpose,
 high-level programming languages designed for ease of
 use. The original version was created by John G.
Kemeny, [URL: "https://en.wikipedia.org/wiki/Thomas_E._Kurtz"] Thomas E. Kurtz at [URL: "https://en.wikipedia.org/wiki/Dartmouth_College"] Dartmouth College in
1964. They wanted to enable students in non-scientific
fields to use computers. At the time, nearly all
computers required writing custom software, which
only [URL: "https://en.wikipedia.org/wiki/Scientist"] scientists and [URL: "https://en.wikipedia.org/wiki/Mathematician"] mathematicians tended to learn. 
BASIC
In addition to the program language, Kemeny and
Kurtz developed the [URL: "https://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System"] Dartmouth Time Sharing System
(DTSS), which allowed multiple users to edit and run
BASIC programs simultaneously on remote terminals.
This general model became very popular on
 minicomputer systems like the PDP-11 and Data
General Nova in the late 1960s and early 1970s.
 Hewlett-Packard produced an entire computer line for
this method of operation, introducing the [URL: "https://en.wikipedia.org/wiki/HP2000"] HP2000
series in the late 1960s and continuing sales into the
1980s. Many early video games trace their history to
one of these versions of BASIC. 
 Atari BASIC (1979) for the [URL: "https://en.wikipedia.org/wiki/Atari_8-bit_family"] Atari 8-bit family
 Paradigm [URL: "https://en.wikipedia.org/wiki/Non-structured_programming"] Non-structured, later
 procedural, later object-
oriented
 Designed by [URL: "https://en.wikipedia.org/wiki/John_G._Kemeny"] John G. Kemeny
 Thomas E. Kurtz
First appeared May 1, 1964
Major [URL: "https://en.wikipedia.org/wiki/Programming_language_implementation"] implementations
The emergence of [URL: "https://en.wikipedia.org/wiki/Microcomputer"] microcomputers in the mid-1970s
led to the development of multiple BASIC dialects,
including [URL: "https://en.wikipedia.org/wiki/Microsoft_BASIC"] Microsoft BASIC in 1975. Due to the tiny
 main memory available on these machines, often 4 KB,
a variety of [URL: "https://en.wikipedia.org/wiki/Tiny_BASIC"] Tiny BASIC dialects was also created.
BASIC was available for almost any system of the era,
and became the de facto programming language for
 home computer systems that emerged in the late 1970s.
These [URL: "https://en.wikipedia.org/wiki/Personal_Computer"] PCs almost always had a [URL: "https://en.wikipedia.org/wiki/BASIC_interpreter"] BASIC interpreter
installed by default, often in the machine's [URL: "https://en.wikipedia.org/wiki/Firmware"] firmware or
sometimes on a [URL: "https://en.wikipedia.org/wiki/Read_only_memory"] ROM cartridge. 
 Dartmouth BASIC · [URL: "https://en.wikipedia.org/wiki/Tiny_BASIC"] Tiny BASIC ·
 Applesoft BASIC · [URL: "https://en.wikipedia.org/wiki/Atari_BASIC"] Atari BASIC · [URL: "https://en.wikipedia.org/wiki/Sinclair_BASIC"] Sinclair BASIC
· [URL: "https://en.wikipedia.org/wiki/Commodore_BASIC"] Commodore BASIC · [URL: "https://en.wikipedia.org/wiki/BBC_BASIC"] BBC BASIC · [URL: "https://en.wikipedia.org/wiki/TI-BASIC"] TI-BASIC ·
 Casio BASIC · [URL: "https://en.wikipedia.org/wiki/Microsoft_BASIC"] Microsoft BASIC · [URL: "https://en.wikipedia.org/wiki/QB64"] QB64 ·
 FreeBASIC · [URL: "https://en.wikipedia.org/wiki/Liberty_BASIC"] Liberty BASIC · [URL: "https://en.wikipedia.org/wiki/PowerBASIC"] PowerBASIC ·
 QuickBASIC
Influenced by
 ALGOL 60 · [URL: "https://en.wikipedia.org/wiki/Fortran"] FORTRAN II · [URL: "https://en.wikipedia.org/wiki/JOSS"] JOSS
Influenced
 COMAL · [URL: "https://en.wikipedia.org/wiki/Visual_Basic_(classic)"] Visual Basic · [URL: "https://en.wikipedia.org/wiki/Visual_Basic_.NET"] Visual Basic .NET ·
BASIC declined in popularity in the 1990s, as more 
 GRASS
powerful microcomputers came to market and  [URL: "https://en.wikibooks.org/wiki/BASIC_Programming"] BASIC Programming at Wikibooks
programming languages with advanced features (such
as [URL: "https://en.wikipedia.org/wiki/Pascal_(programming_language)"] Pascal and C) became tenable. In 1991, [URL: "https://en.wikipedia.org/wiki/Microsoft"] Microsoft released [URL: "https://en.wikipedia.org/wiki/Visual_Basic_(classic)"] Visual Basic, combining an updated version
of BASIC with a [URL: "https://en.wikipedia.org/wiki/Graphical_user_interface_builder"] visual forms builder. This reignited use of the language and "VB" remains a major
programming language in the forms of [URL: "https://en.wikipedia.org/wiki/Visual_Basic_for_Applications"] VBA and [URL: "https://en.wikipedia.org/wiki/Visual_Basic_.NET"] VB.NET.
Contents
Page 2
Origin
Spread on time-sharing services
Spread on minicomputers
Explosive growth: the home computer era
IBM PC and compatibles
Visual Basic
Post-1990 versions and dialects
Calculators
Windows command-line
Other
Legacy
Syntax
Typical BASIC keywords
Data manipulation
Program flow control
Input and output
Mathematical functions
Miscellaneous
Data types and variables
Examples
Unstructured BASIC
Structured BASIC
Object-oriented BASIC
Standards
Compilers and interpreters
See also
Notes
References
General references
External links
Origin
 John G. Kemeny was the math department chairman at Dartmouth College. Based largely on his reputation
as an innovator in math teaching, in 1959 the school won an [URL: "https://en.wikipedia.org/wiki/Alfred_P._Sloan_Foundation"] Alfred P. Sloan Foundation award for
$500,000 to build a new department building.[2] [URL: "https://en.wikipedia.org/wiki/Thomas_E._Kurtz"] Thomas E. Kurtz had joined the department in 1956, and
from the 1960s Kemeny and Kurtz agreed on the need for programming literacy among students outside
the traditional [URL: "https://en.wikipedia.org/wiki/Science,_technology,_engineering,_and_mathematics"] STEM fields. Kemeny later noted that "Our vision was that every student on campus should
have access to a computer, and any faculty member should be able to use a computer in the classroom
whenever appropriate. It was as simple as that."[3]
Page 3
Kemeny and Kurtz had made two previous experiments with simplified languages, [URL: "https://en.wikipedia.org/wiki/DARSIMCO"] DARSIMCO
(Dartmouth Simplified Code) and [URL: "https://en.wikipedia.org/wiki/DOPE_(Dartmouth_Oversimplified_Programming_Experiment)"] DOPE (Dartmouth Oversimplified Programming Experiment). These did
not progress past a single freshman class. New experiments using [URL: "https://en.wikipedia.org/wiki/Fortran"] Fortran and [URL: "https://en.wikipedia.org/wiki/ALGOL"] ALGOL followed, but Kurtz
concluded these languages were too tricky for what they desired. As Kurtz noted, Fortran had numerous
oddly-formed commands, notably an "almost impossible-to-memorize convention for specifying a loop: DO
100, I = 1, 10, 2. Is it '1, 10, 2' or '1, 2, 10', and is the comma after the line number required or
not?"[3]
Moreover, the lack of any sort of immediate feedback was a key problem; the machines of the era used
 batch processing and took a long time to complete a run of a program. While Kurtz was visiting MIT, John
McCarthy suggested that [URL: "https://en.wikipedia.org/wiki/Time-sharing"] time-sharing offered a solution; a single machine could divide up its processing
time among many users, giving them the illusion of having a (slow) computer to themselves.[4] Small
programs would return results in a few seconds. This led to increasing interest in a system using time-
sharing and a new language specifically for use by non-STEM students.[3]
Kemeny wrote the first version of BASIC. The [URL: "https://en.wikipedia.org/wiki/Acronym"] acronym BASIC comes from the name of an unpublished
paper by Thomas Kurtz.[5] The new language was heavily patterned on FORTRAN II; statements were
one-to-a-line, numbers were used to indicate the target of loops and branches, and many of the commands
were similar or identical to Fortran. However, the [URL: "https://en.wikipedia.org/wiki/Syntax_(programming_languages)"] syntax was changed wherever it could be improved. For
instance, the difficult to remember DO loop was replaced by the much easier to remember FOR I = 1
TO 10 STEP 2, and the line number used in the DO was instead indicated by the NEXT I.[a]
Likewise, the cryptic IF statement of Fortran, whose syntax matched a particular instruction of the
machine on which it was originally written, became the simpler IF I=5 THEN GOTO 100. These
changes made the language much less idiosyncratic while still having an overall structure and feel similar to
the original FORTRAN.[3]
The project received a $300,000 grant from the [URL: "https://en.wikipedia.org/wiki/National_Science_Foundation"] National Science Foundation, which was used to purchase
a [URL: "https://en.wikipedia.org/wiki/GE-225"] GE-225 computer for processing, and a Datanet-30 realtime processor to handle the [URL: "https://en.wikipedia.org/wiki/Teletype_Model_33"] Teletype Model 33
 teleprinters used for input and output. A team of a dozen undergraduates worked on the project for about a
year, writing both the DTSS system and the BASIC compiler.[3] The first version BASIC language was
released on 1 May 1964.[6][7]
Initially, BASIC concentrated on supporting straightforward mathematical work, with [URL: "https://en.wikipedia.org/wiki/Matrix_(mathematics)"] matrix arithmetic
support from its initial implementation as a batch language, and [URL: "https://en.wikipedia.org/wiki/Character_string"] character string functionality being added
by 1965. Usage in the university rapidly expanded, requiring the main CPU to be replaced by a GE-235,[3]
and still later by a GE-635. By the early 1970s there were hundreds of terminals connected to the machines
at Dartmouth, some of them remotely.
Wanting use of the language to become widespread, its designers made the compiler available free of
charge. In the 1960s, software became a chargeable commodity; until then, it was provided without charge
as a service with the very expensive computers, usually available only to lease. They also made it available
to high schools in the [URL: "https://en.wikipedia.org/wiki/Hanover,_New_Hampshire"] Hanover, New Hampshire area and regionally throughout New England on Teletype
Model 33 and Model 35 teleprinter terminals connected to Dartmouth via dial-up phone lines, and they put
considerable effort into promoting the language. In the following years, as other dialects of BASIC
appeared, Kemeny and Kurtz's original BASIC dialect became known as [URL: "https://en.wikipedia.org/wiki/Dartmouth_BASIC"] Dartmouth BASIC.
New Hampshire recognized the accomplishment in 2019 when it erected a highway historical marker in
Hanover describing the creation of "the first user-friendly programming language".[8]
Spread on time-sharing services
Page 4
The emergence of BASIC took place as part of a wider movement towards time-sharing systems. First
conceptualized during the late 1950s, the idea became so dominant in the computer industry by the early
1960s that its proponents were speaking of a future in which users would "buy time on the computer much
the same way that the average household buys power and water from utility companies".[9]
General Electric, having worked on the Dartmouth project, wrote their own underlying operating system
and launched an online time-sharing system known as Mark I. It featured BASIC as one of its primary
 selling points. Other companies in the emerging field quickly followed suit; Tymshare introduced SUPER
BASIC in 1968, [URL: "https://en.wikipedia.org/wiki/CompuServe"] CompuServe had a version on the [URL: "https://en.wikipedia.org/wiki/DEC-10"] DEC-10 at their launch in 1969, and by the early 1970s
BASIC was largely universal on general-purpose [URL: "https://en.wikipedia.org/wiki/Mainframe_computers"] mainframe computers. Even [URL: "https://en.wikipedia.org/wiki/IBM"] IBM eventually joined the
club with the introduction of VS-BASIC in 1973.[10]
Although time-sharing services with BASIC were successful for a time, the widespread success predicted
earlier was not to be. The emergence of minicomputers during the same period, and especially low-cost
microcomputers in the mid-1970s, allowed anyone to purchase and run their own systems rather than buy
online time which was typically billed at dollars per minute.[b][11]
Spread on minicomputers
BASIC, by its very nature of being small, was naturally suited to
porting to the [URL: "https://en.wikipedia.org/wiki/Minicomputer"] minicomputer market, which was emerging at the
same time as the time-sharing services. These machines had very
small [URL: "https://en.wikipedia.org/wiki/Main_memory"] main memory, perhaps as little as 4 KB in modern
 terminology,[c] and lacked high-performance storage like hard
drives that make compilers practical. On these systems, BASIC
was normally implemented as an interpreter rather than a compiler
due to the reduced need for working memory.[d] 
The HP 2000 system was designed
A particularly important example was [URL: "https://en.wikipedia.org/wiki/HP_Time-Shared_BASIC"] HP Time-Shared BASIC, to run time-shared BASIC as its
which, like the original Dartmouth system, used two computers primary task.
working together to implement a time-sharing system. The first, a
low-end machine in the [URL: "https://en.wikipedia.org/wiki/HP_2100"] HP 2100 series, was used to control user
input and save and load their programs to tape or disk. The other, a high-end version of the same
underlying machine, ran the programs and generated output. For a cost of about $100,000, one could own
a machine capable of running between 16 and 32 users at the same time.[12] The system, bundled as the HP
2000, was the first mini platform to offer time-sharing and was an immediate runaway success, catapulting
HP to become the third-largest vendor in the minicomputer space, behind [URL: "https://en.wikipedia.org/wiki/Digital_Equipment_Corporation"] DEC and [URL: "https://en.wikipedia.org/wiki/Data_General"] Data General (DG).[13]
DEC, the leader in the minicomputer space since the mid-1960s, had initially ignored BASIC. This was
due to their work with [URL: "https://en.wikipedia.org/wiki/RAND_Corporation"] RAND Corporation, who had purchased a [URL: "https://en.wikipedia.org/wiki/PDP-6"] PDP-6 to run their [URL: "https://en.wikipedia.org/wiki/JOSS"] JOSS language,
which was conceptually very similar to BASIC.[14] This led DEC to introduce a smaller, cleaned up
version of JOSS known as FOCAL, which they heavily promoted in the late 1960s. However, with
timesharing systems widely offering BASIC, and all of their competition in the minicomputer space doing
the same, DEC's customers were clamoring for BASIC. After management repeatedly ignored their pleas,
 David H. Ahl took it upon himself to buy a BASIC for the [URL: "https://en.wikipedia.org/wiki/PDP-8"] PDP-8, which was a major success in the
education market. By the early 1970s, FOCAL and JOSS had been forgotten and BASIC had become
almost universal in the minicomputer market.[15] DEC would go on to introduce their updated version,
 BASIC-PLUS, for use on the [URL: "https://en.wikipedia.org/wiki/RSTS/E"] RSTS/E time-sharing operating system.
Page 5
During this period a number of simple [URL: "https://en.wikipedia.org/wiki/Text-based_game"] text-based games were written in BASIC, most notably Mike
Mayfield's [URL: "https://en.wikipedia.org/wiki/Star_Trek_(text_game)"] Star Trek. David Ahl collected these, some ported from FOCAL, and published them in an
educational newsletter he compiled. He later collected a number of these into book form, 101 BASIC
Computer Games, published in 1973.[16] During the same period, Ahl was involved in the creation of a
small computer for education use, an early [URL: "https://en.wikipedia.org/wiki/Personal_computer"] personal computer. When management refused to support the
concept, Ahl left DEC in 1974 to found the seminal computer magazine, [URL: "https://en.wikipedia.org/wiki/Creative_Computing_(magazine)"] Creative Computing. The book
remained popular, and was re-published on several occasions.[17]
Explosive growth: the home computer era
The introduction of the first [URL: "https://en.wikipedia.org/wiki/Microcomputer"] microcomputers in the mid-1970s was
the start of explosive growth for BASIC. It had the advantage that
it was fairly well known to the young designers and computer
hobbyists who took an interest in microcomputers, many of whom
had seen BASIC on minis or mainframes. Despite [URL: "https://en.wikipedia.org/wiki/Edsger_W._Dijkstra"] Dijkstra's
famous judgement in 1975, "It is practically impossible to teach
good programming to students that have had a prior exposure to
BASIC: as potential programmers they are mentally mutilated
beyond hope of regeneration",[18] BASIC was one of the few
languages that was both high-level enough to be usable by those
without training and small enough to fit into the microcomputers of
the day, making it the de facto standard programming language on
early microcomputers. 
 Commodore BASIC v2.0 on the
 Commodore 64
 The first microcomputer version of BASIC was co-written by Bill
Gates, [URL: "https://en.wikipedia.org/wiki/Paul_Allen"] Paul Allen and [URL: "https://en.wikipedia.org/wiki/Monte_Davidoff"] Monte Davidoff for their newly formed
company, Micro-Soft. This was released by MITS in [URL: "https://en.wikipedia.org/wiki/Punch_tape"] punch tape
format for the [URL: "https://en.wikipedia.org/wiki/Altair_8800"] Altair 8800 shortly after the machine itself,[19]
immediately cementing BASIC as the primary language of early
microcomputers. Members of the [URL: "https://en.wikipedia.org/wiki/Homebrew_Computer_Club"] Homebrew Computer Club
began circulating copies of the program, causing Gates to write his
[URL: "https://en.wikipedia.org/wiki/Open_Letter_to_Hobbyists"] Open Letter to Hobbyists, complaining about this early example of
 software piracy. 
 MSX BASIC version 3.0
Partially in response to Gates's letter, and partially to make an even
 smaller BASIC that would run usefully on 4 KB machines,[e] Bob
Albrecht urged [URL: "https://en.wikipedia.org/wiki/Dennis_Allison"] Dennis Allison to write their own variation of the
language. How to design and implement a stripped-down version
of an [URL: "https://en.wikipedia.org/wiki/Interpreter_(computer_software)"] interpreter for the BASIC language was covered in articles by
 Allison in the first three quarterly issues of the People's Computer
Company newsletter published in 1975 and implementations with
 source code published in Dr. Dobb's Journal of Tiny BASIC
Calisthenics & Orthodontia: Running Light Without Overbyte. This
led to a wide variety of [URL: "https://en.wikipedia.org/wiki/Tiny_BASIC"] Tiny BASICs with added features or other
improvements, with versions from Tom Pittman and [URL: "https://en.wikipedia.org/wiki/Li-Chen_Wang"] Li-Chen Wang
becoming particularly well known.[20] 
"Train Basic every day!"—reads a
poster (bottom center) in a Russian
school (c. 1985–1986)
Micro-Soft, by this time Microsoft, ported their interpreter for the [URL: "https://en.wikipedia.org/wiki/MOS_6502"] MOS 6502, which quickly become one
of the most popular microprocessors of the 8-bit era. When new microcomputers began to appear, notably
the "1977 trinity" of the [URL: "https://en.wikipedia.org/wiki/TRS-80"] TRS-80, [URL: "https://en.wikipedia.org/wiki/Commodore_PET"] Commodore PET and [URL: "https://en.wikipedia.org/wiki/Apple_II"] Apple II, they either included a version of the MS
Page 6
code, or quickly introduced new models with it. By 1978, MS BASIC was a de facto standard and
practically every [URL: "https://en.wikipedia.org/wiki/Home_computer"] home computer of the 1980s included it in ROM. Upon boot, a BASIC interpreter in
 direct mode was presented.
 Commodore Business Machines included [URL: "https://en.wikipedia.org/wiki/Commodore_BASIC"] Commodore BASIC, based on Microsoft BASIC. The Apple II
and TRS-80 each had two versions of BASIC, a smaller introductory version introduced with the initial
releases of the machines and an MS-based version introduced as interest in the platforms increased. As new
companies entered the field, additional versions were added that subtly changed the BASIC family. The
 Atari 8-bit family had its own [URL: "https://en.wikipedia.org/wiki/Atari_BASIC"] Atari BASIC that was modified in order to fit on an 8 KB [URL: "https://en.wikipedia.org/wiki/ROM_cartridge"] ROM cartridge.
 Sinclair BASIC was introduced in 1980 with the Sinclair ZX80, and was later extended for the Sinclair
 ZX81 and the Sinclair [URL: "https://en.wikipedia.org/wiki/ZX_Spectrum"] ZX Spectrum. The [URL: "https://en.wikipedia.org/wiki/BBC"] BBC published [URL: "https://en.wikipedia.org/wiki/BBC_BASIC"] BBC BASIC, developed by [URL: "https://en.wikipedia.org/wiki/Acorn_Computers"] Acorn Computers
Ltd, incorporating many extra [URL: "https://en.wikipedia.org/wiki/Structured_programming"] structured programming keywords and advanced floating-point operation
features.
As the popularity of BASIC grew in this period, computer magazines published complete source code in
BASIC for video games, utilities, and other programs. Given BASIC's straightforward nature, it was a
simple matter to [URL: "https://en.wikipedia.org/wiki/Type-in_program"] type in the code from the magazine and execute the program. Different magazines were
published featuring programs for specific computers, though some BASIC programs were considered
universal and could be used in machines running any variant of BASIC (sometimes with minor
adaptations). Many books of type-in programs were also available, and in particular, Ahl published versions
of the original 101 BASIC games converted into the Microsoft dialect and published it from Creative
Computing as [URL: "https://en.wikipedia.org/wiki/BASIC_Computer_Games"] BASIC Computer Games. This book, and its sequels, provided hundreds of ready-to-go
programs that could be easily converted to practically any BASIC-running platform.[16][21][22] The book
reached the stores in 1978, just as the [URL: "https://en.wikipedia.org/wiki/Home_computer"] home computer market was starting off, and it became the first
million-selling computer book. Later packages, such as [URL: "https://en.wikipedia.org/w/index.php?title=Learn_to_Program_BASIC&action=edit&redlink=1"] Learn to Program BASIC would also have gaming
as an introductory focus. On the business-focused [URL: "https://en.wikipedia.org/wiki/CP/M"] CP/M computers which soon became widespread in
small business environments, [URL: "https://en.wikipedia.org/wiki/Microsoft_BASIC"] Microsoft BASIC (MBASIC) was one of the leading applications.[23]
In 1978, David Lien published the first edition of The BASIC Handbook: An Encyclopedia of the BASIC
Computer Language, documenting keywords across over 78 different computers. By 1981, the second
edition documented keywords from over 250 different computers, showcasing the explosive growth of the
microcomputer era.[24]
IBM PC and compatibles
When IBM was designing the [URL: "https://en.wikipedia.org/wiki/IBM_PC"] IBM PC, they followed the
paradigm of existing home computers in wanting to have a built-in
BASIC. They sourced this from Microsoft – [URL: "https://en.wikipedia.org/wiki/IBM_Cassette_BASIC"] IBM Cassette BASIC
– but Microsoft also produced several other versions of BASIC for
 MS-DOS/PC DOS including IBM Disk BASIC (BASIC D), IBM
BASICA (BASIC A),  [URL: "https://en.wikipedia.org/wiki/GW-BASIC"] GW-BASIC (a BASICA-compatible
version that did not need IBM's ROM) and QBasic, all typically
bundled with the machine. In addition they produced the Microsoft 
 IBM Cassette BASIC 1.10
BASIC Compiler aimed at professional programmers. Turbo
Pascal-publisher [URL: "https://en.wikipedia.org/wiki/Borland"] Borland published [URL: "https://en.wikipedia.org/wiki/Turbo_Basic"] Turbo Basic 1.0 in 1985 (successor versions are still being marketed by
the original author under the name PowerBASIC). Microsoft wrote the windowed [URL: "https://en.wikipedia.org/wiki/AmigaBASIC"] AmigaBASIC that was
supplied with version 1.1 of the pre-emptive multitasking GUI Amiga computers (late 1985 / early 1986),
although the product unusually did not bear any Microsoft marks.
These later variations introduced many extensions, such as improved [URL: "https://en.wikipedia.org/wiki/String_manipulation"] string manipulation and graphics
 support, access to the file system and additional data types. More important were the facilities for structured
programming, including additional [URL: "https://en.wikipedia.org/wiki/Control_structures"] control structures and proper [URL: "https://en.wikipedia.org/wiki/Subroutine"] subroutines supporting [URL: "https://en.wikipedia.org/wiki/Local_variable"] local variables.
[URL: "https://en.wikipedia.org/wiki/Read-only_memory"]
Page 7
However, by the latter half of the 1980s, users were increasingly using pre-made applications written by
others rather than learning programming themselves; while professional programmers now had a wide
range of more advanced languages available on small computers. [URL: "https://en.wikipedia.org/wiki/C_(programming_language)"] C and later [URL: "https://en.wikipedia.org/wiki/C%2B%2B"] C++ became the languages of
choice for professional [URL: "https://en.wikipedia.org/wiki/Shrink_wrap_contract"] "shrink wrap" application development.[25][26]
Visual Basic
In 1991, Microsoft introduced [URL: "https://en.wikipedia.org/wiki/Visual_Basic_(classic)"] Visual Basic, an evolutionary development of QuickBASIC. It included
constructs from that language such as block-structured control statements, parameterized subroutines and
optional [URL: "https://en.wikipedia.org/wiki/Type_system#STATIC"] static typing as well as [URL: "https://en.wikipedia.org/wiki/Object_oriented_language"] object-oriented constructs from other languages such as "With" and "For
Each". The language retained some compatibility with its predecessors, such as the Dim keyword for
declarations, "Gosub"/Return statements and optional line numbers which could be used to locate errors.
 An important driver for the development of Visual Basic was as the new macro language for Microsoft
Excel, a [URL: "https://en.wikipedia.org/wiki/Spreadsheet"] spreadsheet program. To the surprise of many at Microsoft who still initially marketed it as a
language for hobbyists, the language came into widespread use for small custom business applications
shortly after the release of VB version 3.0, which is widely considered the first relatively stable version.
While many advanced programmers still scoffed at its use, VB met the needs of [URL: "https://en.wikipedia.org/wiki/Small_business"] small businesses efficiently
as by that time, computers running Windows 3.1 had become fast enough that many business-related
processes could be completed "in the blink of an eye" even using a "slow" language, as long as large
amounts of data were not involved. Many small business owners found they could create their own small,
yet useful applications in a few evenings to meet their own specialized needs. Eventually, during the
lengthy lifetime of VB3, knowledge of Visual Basic had become a marketable job skill. Microsoft also
produced [URL: "https://en.wikipedia.org/wiki/VBScript"] VBScript in 1996 and [URL: "https://en.wikipedia.org/wiki/Visual_Basic_.NET"] Visual Basic .NET in 2001. The latter has essentially the same power as
 C# and Java but with syntax that reflects the original Basic language. The IDE, with its event-driven GUI
builder, was also influential on other tools, most notably [URL: "https://en.wikipedia.org/wiki/Borland_Software"] Borland Software's [URL: "https://en.wikipedia.org/wiki/Delphi_(software)"] Delphi for [URL: "https://en.wikipedia.org/wiki/Object_Pascal"] Object Pascal and
its own descendants such as Lazarus.[27]
Mainstream support for the final version 6.0 of the original Visual Basic ended on March 31, 2005,
followed by extended support in March 2008.[28] On March 11, 2020, Microsoft announced that evolution
of the VB.NET language had also concluded, although it was still supported.[29] Meanwhile, competitors
exist such as [URL: "https://en.wikipedia.org/wiki/Xojo"] Xojo and Gambas.
Post-1990 versions and dialects
Many other BASIC dialects have also sprung up since 1990,
including the [URL: "https://en.wikipedia.org/wiki/Open-source_software"] open source [URL: "https://en.wikipedia.org/wiki/QB64"] QB64 and FreeBASIC, inspired by
QBasic, and the Visual Basic-styled RapidQ, [URL: "https://en.wikipedia.org/wiki/Basic_For_Qt"] Basic For Qt and
Gambas. Modern commercial incarnations include PureBasic,
PowerBASIC, Xojo, Monkey X and [URL: "https://en.wikipedia.org/wiki/True_BASIC"] True BASIC (the direct
successor to Dartmouth BASIC from a company controlled by
Kurtz).
Several web-based simple BASIC interpreters also now exist,
including Microsoft's [URL: "https://en.wikipedia.org/wiki/Microsoft_Small_Basic"] Small Basic. Many versions of BASIC are
 also now available for smartphones and tablets via the Apple App 
Three modern Basic variants: [URL: "https://en.wikipedia.org/wiki/Mono_(software)"] Mono
Basic, [URL: "https://en.wikipedia.org/wiki/OpenOffice.org_Basic"] OpenOffice.org Basic and
 Gambas
Store, or [URL: "https://en.wikipedia.org/wiki/Google_Play"] Google Play store for Android. On game consoles, an
application for the [URL: "https://en.wikipedia.org/wiki/Nintendo_3DS"] Nintendo 3DS and [URL: "https://en.wikipedia.org/wiki/Nintendo_DSi"] Nintendo DSi called [URL: "https://en.wikipedia.org/wiki/Petit_Computer"] Petit Computer allows for programming in a
 slightly modified version of BASIC with DS button support. A version has also been released for Nintendo
Switch.
Page 8
Calculators
 Variants of BASIC are available on graphing and otherwise programmable calculators made by Texas
Instruments, HP, Casio, and others.
Windows command-line
QBasic, a version of Microsoft [URL: "https://en.wikipedia.org/wiki/QuickBASIC"] QuickBASIC without the linker to make EXE files, is present in the
 Windows NT and DOS-[URL: "https://en.wikipedia.org/wiki/Windows_95"] Windows 95 streams of operating systems and can be obtained for more recent
releases like [URL: "https://en.wikipedia.org/wiki/Windows_7"] Windows 7 which do not have them. Prior to DOS 5, the Basic interpreter was [URL: "https://en.wikipedia.org/wiki/GW-BASIC"] GW-Basic.
QuickBasic is part of a series of three languages issued by Microsoft for the home and office power user
and small-scale professional development; QuickC and QuickPascal are the other two. For [URL: "https://en.wikipedia.org/wiki/Windows_95"] Windows 95
and 98, which do not have QBasic installed by default, they can be copied from the installation disc, which
will have a set of directories for old and optional software; other missing commands like Exe2Bin and
others are in these same directories.
Other
The various Microsoft, Lotus, and Corel office suites and related
products are programmable with Visual Basic in one form or
another, including LotusScript, which is very similar to VBA 6.
The Host Explorer terminal emulator uses WWB as a macro
language; or more recently the programme and the suite in which it
is contained is programmable in an in-house Basic variant known
as Hummingbird Basic. The VBScript variant is used for
programming web content, Outlook 97, Internet Explorer, and the
 Windows Script Host. WSH also has a Visual Basic for 
BASIC came to some video game
systems, such as the Nintendo
Famicom.
Applications (VBA) engine installed as the third of the default
engines along with VBScript, JScript, and the numerous proprietary or open source engines which can be
installed like PerlScript, a couple of Rexx-based engines, Python, Ruby, Tcl, Delphi, XLNT, PHP, and
others; meaning that the two versions of Basic can be used along with the other mentioned languages, as
well as LotusScript, in a WSF file, through the component object model, and other WSH and VBA
constructions. VBScript is one of the languages that can be accessed by the 4Dos, 4NT, and Take
Command enhanced shells. SaxBasic and WWB are also very similar to the Visual Basic line of Basic
implementations. The pre-Office 97 macro language for Microsoft Word is known as WordBASIC. Excel 4
and 5 use Visual Basic itself as a macro language. [URL: "https://en.wikipedia.org/wiki/Chipmunk_Basic"] Chipmunk Basic, an old-school interpreter similar to
BASICs of the 1970s, is available for Linux, [URL: "https://en.wikipedia.org/wiki/Microsoft_Windows"] Microsoft Windows and macOS.
Legacy
The ubiquity of BASIC interpreters on personal computers was such that textbooks once included simple
"Try It In BASIC" exercises that encouraged students to experiment with mathematical and computational
 concepts on classroom or home computers. Popular computer magazines of the day typically included type-
in programs.
Futurist and sci-fi writer [URL: "https://en.wikipedia.org/wiki/David_Brin"] David Brin mourned the loss of ubiquitous BASIC in a 2006 Salon article[30] as
have others who first used computers during this era. In turn, the article prompted Microsoft to develop and
release [URL: "https://en.wikipedia.org/wiki/Microsoft_Small_Basic"] Small Basic;[31] it also inspired similar projects like [URL: "https://en.wikipedia.org/wiki/Basic-256"] Basic-256.[32] [URL: "https://en.wikipedia.org/wiki/Dartmouth_College"] Dartmouth held a 50th
Page 9
anniversary celebration for BASIC on 1 May 2014,[33] as did other organisations; at least one organisation
of VBA programmers organised a 35th anniversary observance in 1999.[34]
Dartmouth College celebrated the 50th anniversary of the BASIC language with a day of events[35] on
April 30, 2014. A short documentary film was produced for the event.[36]
Syntax
Typical BASIC keywords
Data manipulation
LET 
assigns a value (which may be the result of an expression) to a variable. In most dialects
of BASIC, LET is optional, and a line with no other identifiable keyword will assume the
keyword to be LET.
DATA
holds a list of values which are assigned sequentially using the READ command.
READ
reads a value from a DATA statement and assigns it to a variable. An internal pointer
keeps track of the last DATA element that was read and moves it one position forward with
each READ. Most dialects allow multiple variables as parameters, reading several values
in a single operation.
RESTORE
resets the internal pointer to the first DATA statement, allowing the program to begin
READing from the first value. Many dialects allow an optional line number or ordinal value
to allow the pointer to be reset to a selected location.
DIM 
Sets up an array.
Program flow control
IF ... THEN ... {ELSE}
used to perform comparisons or make decisions. Early dialects only allowed a line number
after the THEN, but later versions allowed any valid statement to follow. ELSE was not
widely supported, especially in earlier versions.
FOR ... TO ... {STEP} ... NEXT
repeat a section of code a given number of times. A variable that acts as a counter, the
"index", is available within the loop.
WHILE ... WEND and REPEAT ... UNTIL
repeat a section of code while the specified condition is true. The condition may be
evaluated before each iteration of the loop, or after. Both of these commands are found
mostly in later dialects.
DO ... LOOP {WHILE} or {UNTIL}
repeat a section of code indefinitely or while/until the specified condition is true. The
condition may be evaluated before each iteration of the loop, or after. Similar to WHILE,
these keywords are mostly found in later dialects.
 GOTO
jumps to a numbered or labelled line in the program. Most dialects also allowed the form
GO TO.
Page 10
GOSUB
jumps to a numbered or labelled line, executes the code it finds there until it reaches a
RETURN command, on which it jumps back to the statement following the GOSUB, either
after a colon, or on the next line. This is used to implement subroutines.
ON ... GOTO/GOSUB
chooses where to jump based on the specified conditions. See [URL: "https://en.wikipedia.org/wiki/Switch_statement"] Switch statement for other
forms.
DEF FN
a pair of keywords introduced in the early 1960s to define functions. The original BASIC
functions were modelled on FORTRAN single-line functions. BASIC functions were one
expression with variable arguments, rather than subroutines, with a syntax on the model of
DEF FND(x) = x*x at the beginning of a program. Function names were originally
restricted to FN, plus one letter, i.e., FNA, FNB ...
Input and output
LIST
displays the full source code of the current program.
PRINT
displays a message on the screen or other output device.
INPUT
asks the user to enter the value of a variable. The statement may include a prompt
message.
TAB 
used with PRINT to set the position where the next character will be shown on the screen
or printed on paper. AT is an alternative form.
SPC 
prints out a number of space characters. Similar in concept to TAB but moves by a number
of additional spaces from the current column rather that moving to a specified column.
Mathematical functions
ABS 
Absolute value
ATN 
Arctangent (result in radians)
COS 
Cosine (argument in radians)
EXP 
Exponential function
INT 
Integer part (typically [URL: "https://en.wikipedia.org/wiki/Floor_function"] floor function)
LOG 
Natural logarithm
RND 
 Random number generation
SIN 
Sine (argument in radians)
SQR 
Square root
TAN 
Tangent (argument in radians)
Page 11
Miscellaneous
REM 
holds a programmer's comment or REMark; often used to give a title to the program and to
help identify the purpose of a given section of code.
USR 
transfers program control to a [URL: "https://en.wikipedia.org/wiki/Machine_code"] machine language subroutine, usually entered as an
alphanumeric [URL: "https://en.wikipedia.org/wiki/String_(computer_science)"] string or in a list of DATA statements.
CALL
alternative form of USR found in some dialects. Does not require an artificial parameter to
complete the function-like syntax of USR, and has a clearly defined method of calling
different routines in memory.
TRON / TROFF
turns on display of each line number as it is run ("TRace ON"). This was useful for
 debugging or correcting of problems in a program. TROFF turns it back off again.
ASM 
some compilers such as Freebasic,[37] Purebasic,[38] and Powerbasic[39] also support
 inline assembly language, allowing the programmer to intermix high-level and low-level
code, typically prefixed with "ASM" or "!" statements.
Data types and variables
Minimal versions of BASIC had only integer variables and one- or two-letter variable names, which
minimized requirements of limited and expensive memory (RAM). More powerful versions had floating-
point arithmetic, and variables could be labelled with names six or more characters long. There were some
problems and restrictions in early implementations; for example, Applesoft BASIC allowed variable names
to be several characters long, but only the first two were significant, thus it was possible to inadvertently
write a program with variables "LOSS" and "LOAN",  which would be treated as being the same;
assigning a value to "LOAN" would silently overwrite the value intended as "LOSS". Keywords could not
be used in variables in many early BASICs; "SCORE" would be interpreted as "SC" OR "E", where OR
was a keyword. [URL: "https://en.wikipedia.org/wiki/String_(computer_science)"] String variables are usually distinguished in many microcomputer dialects by having $
suffixed to their name as a sigil, and values are often identified as strings by being delimited by "double
quotation marks". Arrays in BASIC could contain integers, floating point or string variables.
Some dialects of BASIC supported [URL: "https://en.wikipedia.org/wiki/Matrix_(mathematics)"] matrices and matrix operations, useful for the solution of sets of
simultaneous linear algebraic equations. These dialects would directly support matrix operations such as
assignment, addition, multiplication (of compatible matrix types), and evaluation of a determinant. Many
microcomputer BASICs did not support this data type; matrix operations were still possible, but had to be
programmed explicitly on array elements.
Examples
Unstructured BASIC
New BASIC programmers on a home computer might start with a simple program, perhaps using the
language's PRINT statement to display a message on the screen; a well-known and often-replicated
example is [URL: "https://en.wikipedia.org/wiki/The_C_Programming_Language"] Kernighan and Ritchie's [URL: "https://en.wikipedia.org/wiki/%22Hello,_World!%22_program"] "Hello, World!" program:
10 PRINT "Hello, World!"
20 END
Page 12
An [URL: "https://en.wikipedia.org/wiki/Infinite_loop"] infinite loop could be used to fill the display with the message:
10 PRINT "Hello, World!"
20 GOTO 10
Note that the END statement is optional and has no action in most dialects of BASIC. It was not always
included, as is the case in this example. This same program can be modified to print a fixed number of
messages using the common FOR...NEXT statement:
10 LET N=10
20 FOR I=1 TO N
30 PRINT "Hello, World!"
40 NEXT I
Most first-generation BASIC versions, such as [URL: "https://en.wikipedia.org/wiki/MSX_BASIC"] MSX BASIC and [URL: "https://en.wikipedia.org/wiki/GW-BASIC"] GW-BASIC, supported simple data
types, loop cycles, and arrays. The following example is written for GW-BASIC, but will work in most
versions of BASIC with minimal changes:
10 INPUT "What is your name: "; U$
20 PRINT "Hello "; U$
30 INPUT "How many stars do you want: "; N
40 S$ = ""
50 FOR I = 1 TO N
60 S$ = S$ + "*"
70 NEXT I
80 PRINT S$
90 INPUT "Do you want more stars? "; A$
100 IF LEN(A$) = 0 THEN GOTO 90
110 A$ = LEFT$(A$, 1)
120 IF A$ = "Y" OR A$ = "y" THEN GOTO 30
130 PRINT "Goodbye "; U$
140 END
The resulting dialog might resemble:
What is your name: Mike
Hello Mike
How many stars do you want: 7
*******
Do you want more stars? yes
How many stars do you want: 3
***
Do you want more stars? no
Goodbye Mike
The original Dartmouth Basic was unusual in having a matrix keyword, MAT.[f] Although not
implemented by most later microprocessor derivatives, it is used in this example from the 1968 manual[40]
which averages the numbers that are input:
5 LET S = 0
10 MAT INPUT V 
20 LET N = NUM 
30 IF N = 0 THEN 99 
40 FOR I = 1 TO N 
45 LET S = S + V(I) 
50 NEXT I 
60 PRINT S/N 
70 GO TO 5 
99 END
Page 13
Structured BASIC
 Second-generation BASICs (for example, VAX Basic, SuperBASIC, True BASIC, QuickBASIC, BBC
BASIC, [URL: "https://en.wikipedia.org/wiki/Pick_operating_system"] Pick BASIC, PowerBASIC, [URL: "https://en.wikipedia.org/wiki/Liberty_BASIC"] Liberty BASIC and (arguably) COMAL) introduced a number of
features into the language, primarily related to structured and procedure-oriented programming. Usually,
 line numbering is omitted from the language and replaced with [URL: "https://en.wikipedia.org/wiki/Label_(computer_science)"] labels (for GOTO) and [URL: "https://en.wikipedia.org/wiki/Subroutine"] procedures to
encourage easier and more flexible design.[41] In addition keywords and structures to support repetition,
selection and procedures with local variables were introduced.
The following example is in Microsoft QuickBASIC:
REM QuickBASIC example
REM Forward declaration - allows the main code to call a
REM subroutine that is defined later in the source code
DECLARE SUB PrintSomeStars (StarCount!)
REM Main program follows
INPUT "What is your name: ", UserName$
PRINT "Hello "; UserName$
DO
INPUT "How many stars do you want: ", NumStars
CALL PrintSomeStars(NumStars)
DO
INPUT "Do you want more stars? ", Answer$
LOOP UNTIL Answer$ <> ""
Answer$ = LEFT$(Answer$, 1)
LOOP WHILE UCASE$(Answer$) = "Y"
PRINT "Goodbye "; UserName$
END
REM subroutine definition
SUB PrintSomeStars (StarCount)
REM This procedure uses a local variable called Stars$
Stars$ = STRING$(StarCount, "*")
PRINT Stars$
END SUB
Object-oriented BASIC
Third-generation BASIC dialects such as [URL: "https://en.wikipedia.org/wiki/Visual_Basic_(classic)"] Visual Basic, Xojo, Gambas, [URL: "https://en.wikipedia.org/wiki/StarOffice_Basic"] StarOffice Basic, [URL: "https://en.wikipedia.org/wiki/BlitzMax"] BlitzMax and
 PureBasic introduced features to support object-oriented and [URL: "https://en.wikipedia.org/wiki/Event-driven_programming"] event-driven programming paradigm. Most
built-in procedures and functions are now represented as methods of standard objects rather than operators.
Also, the [URL: "https://en.wikipedia.org/wiki/Operating_system"] operating system became increasingly accessible to the BASIC language.
The following example is in [URL: "https://en.wikipedia.org/wiki/Visual_Basic_.NET"] Visual Basic .NET:
Public Module StarsProgram
Private Function Ask(prompt As String) As String
Console.Write(prompt)
Return Console.ReadLine()
End Function
 
Public Sub Main()
Dim userName = Ask("What is your name: ")
Console.WriteLine("Hello {0}", userName)
 
Dim answer As String
 
Do
Dim numStars = CInt(Ask("How many stars do you want: "))
Dim stars As New String("*"c, numStars)
Console.WriteLine(stars)
Page 14
 
Do
answer = Ask("Do you want more stars? ")
Loop Until answer <> ""
Loop While answer.StartsWith("Y", StringComparison.OrdinalIgnoreCase)
 
Console.WriteLine("Goodbye {0}", userName)
End Sub
End Module
Standards
ANSI/ISO/IEC Standard for Minimal BASIC:
ANSI X3.60-1978 "For minimal BASIC"
ISO/IEC 6373:1984 "Data Processing—Programming Languages—Minimal BASIC"
ECMA-55 Minimal BASIC (withdrawn, similar to ANSI X3.60-1978)
ANSI/ISO/IEC Standard for Full BASIC:
ANSI X3.113-1987 "Programming Languages Full BASIC"
INCITS/ISO/IEC 10279-1991 (R2005) "Information Technology – Programming
Languages – Full BASIC"
ANSI/ISO/IEC Addendum Defining Modules:
ANSI X3.113 Interpretations-1992 "BASIC Technical Information Bulletin # 1
Interpretations of ANSI 03.113-1987"
ISO/IEC 10279:1991/ Amd 1:1994 "Modules and Single Character Input Enhancement"
ECMA-116 BASIC (withdrawn, similar to ANSI X3.113-1987)
Compilers and interpreters
Page 15
Compiler
 AppGameKit
 B4X
 BlitzMax
 DarkBASIC
 FreeBASIC
 FutureBASIC
 Gambas
 GFA BASIC
 Mercury
 PowerBASIC
(formerly Turbo
Basic)
 PureBasic
 QB64
 QuickBASIC
 True BASIC
 VSI BASIC for
OpenVMS
 Xojo (formerly
REALbasic) 
Author
The Game Creators
Erel Uziel
Blitz Research
The Game Creators
FreeBASIC
Development Team
Brilor Software
 Benoît Minisini
 Frank Ostrowski
 RemObjects 
Active
Yes
Yes
No
(2015
)
No
(2016)
Yes
Yes
Yes
No
(2005)
Yes 
Windows
Yes
Yes
Yes
Yes
Yes
No
No
Yes
Yes 
Unix-like
Yes
Yes (Android,
iOS)
Yes (Linux, [URL: "https://en.wikipedia.org/wiki/OS_X"] OS
X)
No
Yes
 OS X
Yes
No
 Yes (Linux, OS
X, Android, iOS) 
Other OSs
No
Yes (JVM)
No
No
DOS
 Classic
Mac OS
No
Amiga,
 Atari ST,
 DOS
 Yes (Web
Assembly) 
License
type
 Proprietary
 Proprietary
 Proprietary
 Proprietary
PowerBASIC, Inc. 
No
(2010) Yes  No  DOS [URL: "https://en.wikipedia.org/wiki/Proprietary_software"] Proprietary
Fantaisie Software
 Galleon
 Microsoft
True BASIC 
Yes
Yes
No
(1990)
Yes 
Yes
Yes
No
Yes 
Yes
Yes
No
No 
Yes
Yes
DOS
No 
 Proprietary
 Proprietary
 Proprietary
VMS Software, Inc. Yes  No  No  OpenVMS [URL: "https://en.wikipedia.org/wiki/Proprietary_software"] Proprietary
Xojo Inc. (formerly
Real Software) 
Yes Yes  Yes  Yes [URL: "https://en.wikipedia.org/wiki/Proprietary_software"] Proprietary
Page 16
Interpreter
 Bywater BASIC (bwBASIC)
 Liberty BASIC
 GW-BASIC
 QBasic
[URL: "https://en.wikipedia.org/wiki/Chipmunk_Basic"] Chipmunk Basic
 TI Basic
 TI Extended Basic
 Rocky Mountain BASIC
Bas
 Yabasic
 SmallBASIC
 SuperBASIC
PC-BASIC 
Author
Ted Campbell
Shoptalk Systems
 Microsoft
 Microsoft
Ronald H. Nicholson, Jr.
 Texas Instruments
 Texas Instruments
[Trans Era]
Michael Haardt
Marc-Oliver Ihm
SmallBASIC
 Jan Jones
Rob Hagemans 
Windows
No
Yes
No
Yes
Yes
No
No
Yes
No
Yes
Yes
No
Yes 
Unix-like
Yes
No
No
No
Yes
No
No
No
Yes
Yes
Yes
No
Yes 
Other OSs
?
No
 MS-DOS
No
Yes
 TI-99/4A
 TI-99/4A
 HP 9000
No
No
Android, [URL: "https://en.wikipedia.org/wiki/OS_X"] OS X
 Sinclair QL
 OS X 
License type
 Proprietary
 Proprietary
 Proprietary
 Freeware
 Proprietary
 Proprietary
 Proprietary
 Proprietary
See also
 List of BASIC dialects
Notes
a. Fortran's DO had a continue for this purpose, but still required the line number to be
entered.
b. Tymshare charged about US$10 per hour (equivalent to $70 in 2021) for accessing their
systems.
c. Widely regarded as the first "true" mini, the PDP-8's 12-bit memory space allowed 4,096
address of 12-bits each, or 6,144 bytes.
d. Interpreters are ultimately similar to compilers in the tasks they perform, converting source
code to machine code, but differ in when they perform it. Compilers convert the entire
program at once and output a separate runnable program. Interpreters generally convert only
a single line at a time (or even just a portion of it) and then immediately release that code
once the line has completed running. This means they require only enough memory to run a
single line, and do not require some form of high-performance secondary memory like a hard
drive.
e. Microsoft BASIC left 780 bytes free for user program code and variable values on a 4K
machine, and that was running a cut-down version lacking string variables and other
functionality.
f. From version 3 onwards.
References
1. [URL: "http://bitsavers.trailing-edge.com/pdf/dartmouth/BASIC_Oct64.pdf"] Kemeny, John G.; Kurtz, Thomas E. (1964). Basic: a manual for BASIC, the elementary
algebraic language designed for use with the Dartmouth Time Sharing System (http://bitsave
rs.trailing-edge.com/pdf/dartmouth/BASIC_Oct64.pdf) (PDF) (1st ed.). Hanover, N.H.:
Dartmouth College Computation Center.
Page 17
2. [URL: "http://content.time.com/time/subscriber/article/0,33009,825616,00.html"] "High Math at Hanover" (http://content.time.com/time/subscriber/article/0,33009,825616,00.h
tml). Time. February 23, 1959.
3. Time 2014.
4. Rankin, Joy Lisi (2018), A People's History of Computing in the United States, Cambridge,
Massachusetts: Harvard University Press, ISBN 9780674970977, p. 23
5. [URL: "http://www.catb.org/jargon/html/B/BASIC.html"] "BASIC" (http://www.catb.org/jargon/html/B/BASIC.html). [URL: "https://en.wikipedia.org/wiki/Jargon_File"] Jargon File. Retrieved June 13,
2017.
6. [URL: "http://cis-alumni.org/TKurtz.html"] "Thomas E. Kurtz – History of Computer Programming Languages" (http://cis-alumni.org/TK
urtz.html). cis-alumni.org. Retrieved June 13, 2017.
7. [URL: "https://www.wired.com/2008/05/dayintech-0501-2/"] Alfred, Randy (January 5, 2008). "May 1, 1964: First Basic Program Runs" (https://www.wire
d.com/2008/05/dayintech-0501-2/). [URL: "https://en.wikipedia.org/wiki/Wired_(magazine)"] Wired. Retrieved June 13, 2017.
8. [URL: "https://web.archive.org/web/20190611180750/https://granitegeek.concordmonitor.com/2019/06/11/finally-a-historical-marker-that-talks-about-something-important/"] Brooks, David (11 June 2019). "Finally, a historical marker that talks about something
important" (https://web.archive.org/web/20190611180750/https://granitegeek.concordmonito
 r.com/2019/06/11/finally-a-historical-marker-that-talks-about-something-important/). Concord
 Monitor. Archived from the original (https://granitegeek.concordmonitor.com/2019/06/11/finall
y-a-historical-marker-that-talks-about-something-important/) on 11 June 2019. Retrieved
11 August 2019.
9. [URL: "https://www.computer.org/web/csdl/index/-/csdl/proceedings/afips/1958/5053/00/50530046.pdf"] Bauer, W. F., Computer design from the programmer's viewpoint (https://www.computer.org/w
 eb/csdl/index/-/csdl/proceedings/afips/1958/5053/00/50530046.pdf) Archived (https://web.ar
chive.org/web/20160723012920/https://www.computer.org/web/csdl/index/-/csdl/proceeding
s/afips/1958/5053/00/50530046.pdf) July 23, 2016, at the [URL: "https://en.wikipedia.org/wiki/Wayback_Machine"] Wayback Machine (Eastern Joint
Computer Conference, December 1958) One of the first descriptions of computer time-
sharing.
10. [URL: "https://books.google.com/books?id=sWeKU3wFLREC&pg=PA15"] "IBM VS the World: That's How It Is" (https://books.google.com/books?id=sWeKU3wFLREC
&pg=PA15). Computerworld. December 5, 1973.
11. [URL: "https://books.google.com/books?id=LTTvmUU8rskC&pg=PA387"] Bourne, Charles; Hahn, Trudi Bellardo (August 2003). A History of Online Information
Services, 1963–1976 (https://books.google.com/books?id=LTTvmUU8rskC&pg=PA387).
p. 387. ISBN 9780262261753.
12. [URL: "https://www.hpmuseum.net/display_item.php?hw=411"] "2000 Timeshare System" (https://www.hpmuseum.net/display_item.php?hw=411).
13. [URL: "http://hpmemoryproject.org/news/tenyears_comp/measure_page_00.htm"] "Passing the 10-year mark" (http://hpmemoryproject.org/news/tenyears_comp/measure_pag
e_00.htm). MEASURE Magazine. Hewlett Packard. October 1976.
14. [URL: "https://www.rand.org/content/dam/rand/pubs/reports/2008/R918.pdf"] Marks, Shirley (December 1971). The JOSS Years: Reflections on an experiment (https://ww
w.rand.org/content/dam/rand/pubs/reports/2008/R918.pdf) (PDF) (Technical report). Rand.
15. [URL: "https://computingpioneers.com/index.php?title=Dave_Ahl_and_Betsy_Ahl"] Savetz, Kevin (April 2013). "Dave Ahl and Betsy Ah" (https://computingpioneers.com/index.p
hp?title=Dave_Ahl_and_Betsy_Ahl) (Interview).
16. [URL: "http://www.atariarchives.org/basicgames/"] Ahl, David H. (1973). 101 Basic computer games
(http://www.atariarchives.org/basicgames/). Morristown, N.J.: Creative Computing Press.
OCLC 896774158 [URL: "https://www.worldcat.org/oclc/896774158"] (https://www.worldcat.org/oclc/896774158).
17. [URL: "https://books.google.com/books?id=Cz4EAAAAMBAJ&pg=PA44"] Ahl, David H. (May 11, 1981). "Computer Games" (https://books.google.com/books?id=Cz4
[URL: "https://www.worldcat.org/issn/0199-6649"] EAAAAMBAJ&pg=PA44). InfoWorld. Vol. 3, no. 9. p. 44. ISSN 0199-6649 (https://www.world
cat.org/issn/0199-6649).
18. [URL: "https://www.cs.utexas.edu/users/EWD/ewd04xx/EWD498.PDF"] Dijkstra, Edsger W. (June 18, 1975). "How do we tell truths that might hurt" (https://www.cs.ut
 exas.edu/users/EWD/ewd04xx/EWD498.PDF) (PDF). Selected Writings on Computing: A
Personal Perspective (https://archive.org/details/selectedwritings0000dijk/page/129).
 Springer-Verlag (published 1982). pp. 129–131 (https://archive.org/details/selectedwritings0
 000dijk/page/129). ISBN 978-0387906522. OCLC 693424350 (https://www.worldcat.org/ocl
c/693424350).
Page 18
19. [URL: "https://web.archive.org/web/20121130051115/http://startup.nmnaturalhistory.org/gallery/story.php?ii=20&sid=4"] "We have a BASIC" (https://web.archive.org/web/20121130051115/http://startup.nmnaturalhi
 story.org/gallery/story.php?ii=20&sid=4). New Mexico Museum of Natural History and
 Science. Archived from the original (http://startup.nmnaturalhistory.org/gallery/story.php?ii=2
0&sid=4) on November 30, 2012. Retrieved April 18, 2007.
20. [URL: "http://www.ittybittycomputers.com/IttyBitty/iNotes.html#TinyBasic"] Pittman, Tom. "you had to pay $5 up front to get it…" (http://www.ittybittycomputers.com/IttyBi
tty/iNotes.html#TinyBasic). www.ittybittycomputers.com. Retrieved June 14, 2017.
21. [URL: "http://www.atariarchives.org/morebasicgames/"] Ahl, David H. (1979). More basic computer games (http://www.atariarchives.org/morebasicg
 ames/). Morristown: Creative Computing Press. ISBN 978-0894801372. OCLC 839377789
(https://www.worldcat.org/oclc/839377789).
22. [URL: "http://www.atariarchives.org/bigcomputergames/"] Ahl, David H. (1984). Big computer games
(http://www.atariarchives.org/bigcomputergames/). Morris Plains, N.J.: Creative Computing
 Press. ISBN 978-0916688400. OCLC 872675092 (https://www.worldcat.org/oclc/87267509
2).
23. [URL: "http://oldcomputers.net/osborne-1.html"] "Osborne 1" (http://oldcomputers.net/osborne-1.html). oldcomputers.net. Retrieved June 14,
2017.
24. Lien, David (1981). The BASIC Handbook (Second ed.). San Diego, CA: Compusoft
Publishing. p. inside cover. ISBN 0-[URL: "https://en.wikipedia.org/wiki/Special:BookSources/0-932760-00-7"] 932760-00-7.
25. [URL: "https://books.google.com/books?id=lGRpeBZQYPoC"] Pravin, Jain (2011). The Class Of Java (https://books.google.com/books?id=lGRpeBZQYPo
C). Pearson Education India. ISBN 9788131755440.
26. [URL: "http://www.fysh.org/~zefram/gne/c_programming_language/"] "GNE: the C programming language" (http://www.fysh.org/~zefram/gne/c_programming_lang
uage/). fysh.org. Retrieved June 14, 2017. "During the 1980s, C compilers spread widely,
and C became an extremely popular language."
27. [URL: "https://www.theregister.com/2020/02/14/25_years_delphi_programming/"] "25 years of Delphi and no Oracle in sight: Not a Visual Basic killer but hard to kill" (https://w
ww.theregister.com/2020/02/14/25_years_delphi_programming/).
28. [URL: "http://msdn2.microsoft.com/en-us/vbrun/ms788707.aspx"] "Product Family Life Cycle Guidelines for Visual Basic 6.0" (http://msdn2.microsoft.com/en-u
s/vbrun/ms788707.aspx). Msdn2.microsoft.com. March 31, 2005. Retrieved June 16, 2009.
29. [URL: "https://devblogs.microsoft.com/vbteam/visual-basic-support-planned-for-net-5-0/"] "Visual Basic support planned for .NET 5.0" (https://devblogs.microsoft.com/vbteam/visual-b
asic-support-planned-for-net-5-0/). March 11, 2020.
30. [URL: "https://web.archive.org/web/20130918213750/http://www.salon.com/2006/09/14/basic_2/singleton/"] Brin, David (September 14, 2006). "Why Johnny Can't Code" (https://web.archive.org/web/2
0130918213750/http://www.salon.com/2006/09/14/basic_2/singleton/). [URL: "https://en.wikipedia.org/wiki/Salon_(website)"] Salon. Archived from
 the original (https://www.salon.com/2006/09/14/basic_2/) on September 18, 2013. Retrieved
June 19, 2017.
31. [URL: "https://web.archive.org/web/20140317001756/http://msdn.microsoft.com/en-us/beginner/hh182234.aspx"] "Small Basic" (https://web.archive.org/web/20140317001756/http://msdn.microsoft.com/en-u
 s/beginner/hh182234.aspx). Microsoft Developer Network. Archived from the original (http://
msdn.microsoft.com/en-us/beginner/hh182234.aspx) on March 17, 2014. Retrieved June 19,
2017.
32. [URL: "https://basic256.org/"] "BASIC-256 homepage" (https://basic256.org/).
33. [URL: "http://www.unionleader.com/apps/pbcs.dll/article?AID=/20140429/NEWS04/140429054"] "Dartmouth plans celebration for 50th anniversary of BASIC computer language" (http://ww
 w.unionleader.com/apps/pbcs.dll/article?AID=/20140429/NEWS04/140429054). New
Hampshire Union Leader. April 28, 2014. Retrieved June 14, 2017.
34. [URL: "https://www.google.com/search?q=50th+anniversary+of+BASIC"] "50th anniversary of BASIC – Google Search" (https://www.google.com/search?q=50th+anni
versary+of+BASIC). [URL: "https://en.wikipedia.org/wiki/Google"] Google.
35. [URL: "https://www.dartmouth.edu/basicfifty/events.html"] "BASIC at 50 – Event Schedule" (https://www.dartmouth.edu/basicfifty/events.html).
 Dartmouth College. Retrieved June 14, 2017.
36. [URL: "https://www.dartmouth.edu/basicfifty/"] "BASIC at 50" (https://www.dartmouth.edu/basicfifty/). [URL: "https://en.wikipedia.org/wiki/Dartmouth_College"] Dartmouth College. Retrieved
June 14, 2017.
37. [URL: "http://www.freebasic.net/wiki/wikka.php?wakka=KeyPgAsm"] "KeyPgAsm" (http://www.freebasic.net/wiki/wikka.php?wakka=KeyPgAsm). FreeBasic Wiki.
Retrieved August 2, 2017.
Page 19
38. [URL: "https://www.purebasic.com/documentation/reference/inlinedasm.html"] "Inline x86 ASM" (https://www.purebasic.com/documentation/reference/inlinedasm.html).
Pure Basic. Retrieved August 2, 2017.
39. [URL: "https://web.archive.org/web/20170802164032/https://www.powerbasic.com/help/pbcc/using_assembly-language_in_your_code.htm"] "Using assembly-language in your code" (https://web.archive.org/web/20170802164032/http
s://www.powerbasic.com/help/pbcc/using_assembly-language_in_your_code.htm). Power
 Basic. Archived from the original (https://www.powerbasic.com/help/pbcc/using_assembly-la
nguage_in_your_code.htm) on August 2, 2017. Retrieved August 2, 2017.
40. [URL: "http://bitsavers.trailing-edge.com/pdf/dartmouth/BASIC_4th_Edition_Jan68.pdf"] Kemeny, John G.; Kurtz, Thomas E. (January 1968). Basic: a manual for BASIC, the
elementary algebraic language designed for use with the Dartmouth Time Sharing System
(http://bitsavers.trailing-edge.com/pdf/dartmouth/BASIC_4th_Edition_Jan68.pdf) (PDF)
(4th ed.). Hanover, N.H.: Dartmouth College Computation Center. p. 53.
41. [URL: "https://web.archive.org/web/20131019181140/http://support.microsoft.com/kb/73084"] "Differences Between GW-BASIC and QBasic" (https://web.archive.org/web/201310191811
 40/http://support.microsoft.com/kb/73084). May 12, 2003. Archived from the original (http://su
pport.microsoft.com/kb/73084) on October 19, 2013. Retrieved June 28, 2008.
General references
Sammet, Jean E. (1969). Programming languages: history and fundamentals. Englewood
Cliffs, N.J.: [URL: "https://en.wikipedia.org/wiki/Prentice-Hall"] Prentice-Hall. OCLC 819683527 [URL: "https://www.worldcat.org/oclc/819683527"] (https://www.worldcat.org/oclc/819683527).
Kurtz, Thomas E. (1981). [URL: "http://doi.acm.org/10.1145/800025.1198404"] "BASIC" (http://doi.acm.org/10.1145/800025.1198404). In
 Wexelblat, Richard (ed.). History of programming languages (https://archive.org/details/histor
yofprogram0000hist/page/515). History of Programming Languages I. New York: ACM.
pp. 515–[URL: "https://archive.org/details/historyofprogram0000hist/page/515"] 537 (https://archive.org/details/historyofprogram0000hist/page/515).
 doi:10.1145/800025.1198404 (https://doi.org/10.1145%2F800025.1198404). ISBN 978-
0127450407.
Kemeny, John G.; Kurtz, Thomas E. (1985). Back To BASIC: The History, Corruption, and
 Future of the Language. Addison-Wesley. p. 141. ISBN 9780201134339. OCLC 11399298
(https://www.worldcat.org/oclc/11399298).
Lien, David A. (1986). The Basic Handbook: Encyclopedia of the BASIC Computer
 Language (3rd ed.). Compusoft Publishing. ISBN 9780932760333. OCLC 12548310 (https://
www.worldcat.org/oclc/12548310).
 "Fifty Years of BASIC, the Programming Language That Made Computers Personal" (http://ti
me.com/69316/basic/). Time. April 29, 2014.
External links
 BASIC (https://curlie.org/Computers/Programming/Languages/BASIC) at [URL: "https://en.wikipedia.org/wiki/Curlie"] Curlie
 "BASIC—Beginners All-purpose Symbolic Instruction Code" (http://hopl.info/showlanguage.
prx?exp=176). The Encyclopedia of Computer Languages. [URL: "https://en.wikipedia.org/wiki/Murdoch_University"] Murdoch University.
 The Birth of Basic (https://www.youtube.com/watch?v=WYPNjSoDrqw) on [URL: "https://en.wikipedia.org/wiki/YouTube"] YouTube
Retrieved from "[URL: "https://en.wikipedia.org/w/index.php?title=BASIC&oldid=1090621149"] https://en.wikipedia.org/w/index.php?title=BASIC&oldid=1090621149"
This page was last edited on 30 May 2022, at 13:08 (UTC).
Text is available under the [URL: "https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License"] Creative Commons Attribution-ShareAlike License 3.0;additional terms may apply. By
using this site, you agree to the [URL: "https://foundation.wikimedia.org/wiki/Terms_of_Use"] Terms of Use and [URL: "https://foundation.wikimedia.org/wiki/Privacy_policy"] Privacy Policy. Wikipedia® is a registered trademark of the
 Wikimedia Foundation, Inc., a non-profit organization.
